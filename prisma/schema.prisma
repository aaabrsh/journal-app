// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models
model User {
  id        String    @id @default(uuid())
  full_name String
  email     String    @unique
  password  String
  journals  Journal[]
}

model Journal {
  id           String       @id @default(uuid())
  name         String
  description  String?
  is_deleted   Boolean      @default(false)
  deleted_on   DateTime?
  autosave     Boolean      @default(true)
  has_lock     Boolean      @default(false)
  password     String?
  has_reminder Boolean      @default(false)
  has_tags     Boolean      @default(false)
  entries      Entry[]
  Reminders    Reminder[]
  journalTags  JournalTag[]
  //owner of the journal
  owner        User         @relation(fields: [owner_id], references: [id])
  owner_id     String
}

model Entry {
  id             String     @id @default(uuid())
  title          String
  body           String?
  has_attachment Boolean    @default(false)
  has_tags       Boolean    @default(false)
  files          File[]
  entryTags      EntryTag[]
  //journal to which the entry belongs
  Journal        Journal    @relation(fields: [journal_id], references: [id])
  journal_id     String
}

model File {
  id        String @id @default(uuid())
  name      String
  file_type String
  blob      Bytes
  //entry to which the file belongs
  entry     Entry  @relation(fields: [entry_id], references: [id])
  entry_id  String
}

model Reminder {
  id            String       @id @default(uuid())
  title         String
  body          String
  repeat        Repeat
  dateTime      DateTime
  end_date      DateTime?
  is_active     Boolean      @default(true)
  reminder_type ReminderType
  //the journal to which the reminder is set to
  journal       Journal      @relation(fields: [journal_id], references: [id])
  journal_id    String
}

model Tag {
  id          String       @id @default(uuid())
  name        String
  entryTags   EntryTag[]
  journalTags JournalTag[]
}

model EntryTag {
  id       String @id @default(uuid())
  tag      Tag    @relation(fields: [tag_id], references: [id])
  tag_id   String
  entry    Entry  @relation(fields: [entry_id], references: [id])
  entry_id String
}

model JournalTag {
  id         String  @id @default(uuid())
  tag        Tag     @relation(fields: [tag_id], references: [id])
  tag_id     String
  journal    Journal @relation(fields: [journal_id], references: [id])
  journal_id String
}

// Enums

enum ItemType {
  JOURNAL
  ENTRY
}

enum Repeat {
  DAILY
  WEEKLY
  MONTHLY
}

enum ReminderType {
  NOTIFICATION
  EMAIL
  BOTH
}
